{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "NLP_Worksheet7",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "t4wwrLBi89e3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "a034480b-660b-4769-aa4d-62d9f416328d"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.animation as animation\n",
        "from matplotlib import style\n",
        "import time\n",
        "\n",
        "style.use(\"ggplot\")\n",
        "\n",
        "fig = plt.figure()\n",
        "ax1 = fig.add_subplot(1,1,1)\n",
        "\n",
        "def animate(i):\n",
        "    pullData = open(\"twitter-out.txt\",\"r\").read()\n",
        "    lines = pullData.split('\\n')\n",
        "\n",
        "    xar = []\n",
        "    yar = []\n",
        "\n",
        "    x = 0\n",
        "    y = 0\n",
        "\n",
        "    for l in lines[-200:]:\n",
        "        x += 1\n",
        "        if \"pos\" in l:\n",
        "            y += 1\n",
        "        elif \"neg\" in l:\n",
        "            y -= 1\n",
        "\n",
        "        xar.append(x)\n",
        "        yar.append(y)\n",
        "        \n",
        "    ax1.clear()\n",
        "    ax1.plot(xar,yar)\n",
        "ani = animation.FuncAnimation(fig, animate, interval=1000)\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    }
  ]
}